// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RodManager.Providers;

#nullable disable

namespace RodManager.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221119174952_InitialMigrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("RodManager.Data.AllotmentFarmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrespondenceAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddressForInvitation")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("FeesPublicationAgreement")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FinalDistributionBoxAccessAgreement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("JoiningAllotmentAssociationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlotId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RodoAgreement")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.ToTable("AllotmentFarmers");
                });

            modelBuilder.Entity("RodManager.Data.Plot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AreaSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectricityMeterNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FinalDistributionBoxNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasFinalDistributionBox")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MasterBoxNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WaterMeterNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("RodManager.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Privilege")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RodManager.Data.AllotmentFarmer", b =>
                {
                    b.HasOne("RodManager.Data.Plot", "Plot")
                        .WithMany()
                        .HasForeignKey("PlotId");

                    b.Navigation("Plot");
                });
#pragma warning restore 612, 618
        }
    }
}
